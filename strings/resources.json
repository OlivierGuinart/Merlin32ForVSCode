{
    "ADR":    "Define ADdRess (3 bytes)",
    "ADRL":   "Define ADdRess Long (4 bytes)",
    "ASC":    "Define ASCii (\" positive, ' negative)",
    "CHK":    "Place a CHecKsum in object code",
    "DA":     "Define Address (2 bytes)",
    "DB":     "Define Byte (1 byte)",
    "DC":     "???",
    "DCI":    "Define Dextral Character Inverted",
    "DDB":    "Define Double Byte (2 bytes)",
    "DE":     "???",
    "DFB":    "DeFine Byte (1 byte)",
    "DS":     "Define Storage (x bytes) (e.g. DS 10 (put $00 in 10 bytes), DS 10,$80 (put $80 in 10 bytes))",
    "DW":     "Define Word (2 bytes)",
    "FLS":    "Define FLaShing text",
    "HEX":    "Define HEX data (1 byte)",
    "INV":    "Define INVerse text",
    "REV":    "Define REVerse",
    "STR":    "Define STRing with leading length (1 byte)",
    "STRL":   "Define STRing Long with leading length (2 bytes)",
    
    "ANOP":   "???",
    "AST":    "Send a line of ASTerisks",
    "CYC":    "Calculate and print CYCle times for the code",
    "DAT":    "DATe stamp assembly listing",
    "DEND":   "Dummy section END",
    "DO":     "DO directive",
    "DSK":    "Define the name of the output binary after the directive",
    "DUM":    "DUMmy section start",
    "ELSE":   "ELSE condition",
    "ELUP":   "End of LUP",
    "--^":    "End of LUP",
    "END":    "END of source file",
    "EQU":    "Define constant values (same as =)",
    "ERR":    "Force ERRor",
    "EXP":    "Macro EXPand control",
    "FIN":    "Mandatory ENDdirective for IF and DO ",
    "IF":     "IF condition",
    "KBD":    "Define label from KeyBoarD",
    "LNK":    "Relocate code (same as DSK in Merlin 32)",
    "LONGA":  "???",
    "LONGI":  "???",
    "LST":    "LiSTing control",
    "LSTDO":  "LiSTDO OFF areas of code",
    "LUP":    "Repeat portions of the code (until the --^ directive)",
    "MX":     "Set the size for M (Accumulator) and X (X and Y Registers)",
    "ORG":    "Must be followed by the program's origin, e.g. org $800",
    "PAG":    "New PAGe",
    "PAU":    "PAUse",
    "PUT":    "Insert the content of a source  file",
    "PUTBIN": "???",
    "REL":    "Use at the start of the program to write 16 bit relocatable code",
    "SAV":    "Define the name of the output binary before the directive",
    "SKP":    "SKiP lines",
    "START":  "???",
    "SW":     "SWeet16 opcodes",
    "TR":     "TRuncate control",
    "TTL":    "TiTLe heading",
    "TYP":    "Set the output file type (one byte: $00-$FF)",
    "USE":    "Insert macros",
    "USING":  "???",
    "USR":    "???",
    "XC":     "???",
    
    "ADC":    "ADd with Carry",
    "ADCL":   "ADd with Carry Long",
    "AND":    "Bitwise AND with accumulator",
    "ANDL":   "Bitwise AND with accumulator, Long",
    "ASL":    "ASL shifts all bits left one position. 0 is shifted into bit 0 and the original bit 7 is shifted into the Carry",
    "BCC":    "Branch if Carry Clear",
    "BCS":    "Branch if Carry Set",
    "BEQ":    "Branch if EQual/Branch if zero",
    "BIT":    "BIt Test",
    "BMI":    "Branch if MInus value",
    "BNE":    "Branch if Not Equal/Branch if not zero",
    "BPL":    "Branch if PLus value",
    "BRA":    "BRanch Always",
    "BRK":    "Software BReaK",
    "BRL":    "BRanch always Long",
    "BVC":    "Branch if oVerflow Clear",
    "BVS":    "Branch if oVerflow Set",
    "CLC":    "CLear Carry flag",
    "CLD":    "CLear Decimal flag",
    "CLI":    "CLear Interrupt flag",
    "CLV":    "CLear oVerflow flag",
    "CMP":    "CoMPare accumulator with memory",
    "CMPL":   "CoMPare accumulator with memory, Long",
    "COP":    "COProcessor empowerment (interrupt)",
    "CPX":    "ComPare X with memory",
    "CPY":    "ComPare Y with memory",
    "DEC":    "DECrement accumulator or memory",
    "DEX":    "DEcrement X",
    "DEY":    "Decrement Y",
    "EOR":    "Exclusive OR accumulator with memory",
    "EORL":   "Exclusive OR accumulator with memory, Long",
    "INC":    "INCrement accumulator or memory",
    "INX":    "INcrement X",
    "INY":    "INcrement Y",
    "JML":    "JuMp, Long",
    "JMP":    "JuMP",
    "JMPL":   "JuMP, Long",
    "JSL":    "Jump to Subroutine, Long",
    "JSR":    "Jump to SubRoutine",
    "LDA":    "LoaD Accumulator",
    "LDAL":   "LoaD Accumulator, Long",
    "LDX":    "LoaD X register",
    "LDY":    "LoaD Y register",
    "LSR":    "LSR shifts all bits right one position. 0 is shifted into bit 7 and the original bit 0 is shifted into the Carry",
    "MVN":    "Block MoVe Negative",
    "MVP":    "Block MoVe Positive",
    "NOP":    "No OPeration",
    "ORA":    "Bitwise OR Accumulator with memory",
    "ORAL":   "Bitwise OR Accumulator with memory, Long",
    "PEA":    "Push Effective Address",
    "PEI":    "Push Effective Indirect address",
    "PER":    "Push program countEr Relative",
    "PHA":    "PusH Accumulator",
    "PHB":    "PusH data Bank register",
    "PHD":    "PusH Direct page register",
    "PHK":    "PusH program banK register",
    "PHP":    "PusH Processor status flags",
    "PHX":    "PusH X",
    "PHY":    "PusH Y",
    "PLA":    "Pull Accumulator",
    "PLB":    "Pull data Bank register",
    "PLD":    "Pull Direct page register",
    "PLP":    "Pull Processor status flags",
    "PLX":    "Pull X",
    "PLY":    "Pull Y",
    "REP":    "REset Processor status flag",
    "ROL":    "ROtate Left accumulator or memory",
    "ROR":    "ROtate Right accumulator or memory",
    "RTI":    "ReTurn from Interrupt",
    "RTL":    "ReTurn from subroutine, Long",
    "RTS":    "ReTurn from Subroutine; pulls the top two bytes off the stack (low byte first) and transfers program control to that address+1",
    "SBC":    "SuBtract with Carry",
    "SBCL":   "SuBtract with Carry Long",
    "SEC":    "SEt Carry flag",
    "SED":    "SEt Decimal flag",
    "SEI":    "SEt Interrupt flag",
    "SEP":    "SEt Processor status flag",
    "STA":    "STore Accumulator to memory",
    "STAL":   "STore Accumulator to memory, Long",
    "STP":    "SToP the clock",
    "STX":    "STore X to memory",
    "STY":    "STore Y to memory",
    "STZ":    "STore Zero to memory",
    "TAX":    "Transfer Accumulator to X",
    "TAY":    "Transfer Accumulator to Y",
    "TCD":    "Transfer aCcumulator to Direct page",
    "TCS":    "Transfer aCcumulator to Stack page",
    "TDC":    "Transfer Direct page to aCcumulator",
    "TRB":    "Test and Reset Bit",
    "TSB":    "Test and Set Bit",
    "TSC":    "Transfer Stack pointer to aCcumulator",
    "TSX":    "Transfer Stack pointer to X",
    "TXA":    "Transfer X to Accumulator",
    "TXS":    "Transfer X to Stack pointer",
    "TXY":    "Transfer X to Y",
    "TYA":    "Transfer Y to Accumulator",
    "TYX":    "Transfer Y to X",
    "WAI":    "WAIt for interrupt",
    "WDM":    "Reserved for future use, it performs no operation",
    "XBA":    "EXchange low and high byte of the Accumulator",
    "XCE":    "EXchange Carry and Emulation"
}